class BinarySearch:
    def __init__(self, data):
        # Ensure the data is sorted before performing binary search
        self.data = sorted(data)

    def search(self, target):
        left, right = 0, len(self.data) - 1
        
        while left <= right:
            mid = (left + right) // 2  # Find the middle index
            mid_value = self.data[mid]
            
            if mid_value == target:
                return mid  # Target found at the middle index
            elif mid_value < target:
                left = mid + 1  # Search the right half
            else:
                right = mid - 1  # Search the left half
        
        return -1  # Return -1 if the target is not found

    def get_data(self):
        return self.data


# Example usage
if __name__ == "__main__":
    numbers = [64, 34, 25, 12, 22, 11, 90]
    print("Sorted list:", numbers)

    target = 22
    searcher = BinarySearch(numbers)
    result = searcher.search(target)

    if result != -1:
        print(f"Element {target} found at index {result}.")
    else:
        print(f"Element {target} not found.")
